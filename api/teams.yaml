openapi: 3.0.0
info:
  title: チーム募集API
  description: チーム募集のためのAPI仕様書
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: 開発環境

paths:
  /v1/announcements:
    post:
      summary: 新しいお知らせを作成
      description: 新しいお知らせを作成するためのエンドポイント
      operationId: makeAnnouncement
      tags:
        - お知らせ
      parameters:
        - name: access_token
          in: cookie
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
          description: JWTアクセストークン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAnnouncement'
      responses:
        '200':
          description: お知らせの作成に成功
          content:
  /v1/teams:
    post:
      summary: 新しいチームを作成
      description: 新しいチームを作成するためのエンドポイント
      operationId: makeTeam
      tags:
        - チーム
      parameters:
        - name: access_token
          in: cookie
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
          description: JWTアクセストークン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeTeamRequest'
      responses:
        '200':
          description: チームの作成に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  teamID:
                    type: string
                    description: 生成されてチーム ID
                    example: 1004
        '400':
          description: リクエストが不正
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidationError'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 内部サーバーエラーが発生しました
    get:
      summary: チーム情報を取得
      description: チームIDを指定してチームの詳細情報を取得するエンドポイント
      operationId: getTeam
      tags:
        - チーム
      parameters:
        - name: teamID
          in: path
          required: true
          schema:
            type: integer
            example: 1004
          description: 取得したいチームのID
      responses:
        '200':
          description: チーム情報の取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        '404':
          description: チームが見つからない
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: チームが見つかりません
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 内部サーバーエラーが発生しました
  /v1/teams/{teamID}/join:
    post:
      summary: チームに参加する
      description: 特定のチームに参加するエンドポイント
      operationId: joinTeam
      tags:
        - チーム
      parameters:
        - name: access_token
          in: cookie
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
          description: JWTアクセストークン
        - name: teamID
          in: path
          required: true
          schema:
            type: integer
            example: 1004
          description: 参加したいチームのID
      responses:
        '200':
          description: チーム参加に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Joined team successfully"
        '400':
          description: 不正なリクエスト
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid team ID"
        '401':
          description: 認証されていないリクエスト
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

components:
  schemas:
    PostAnnouncement:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
          description: お知らせタイトル
          example: 新しいお知らせ
        content:
          type: string
          description: お知らせ本文
          example: 新しいお知らせです
    MakeTeamRequest:
      type: object
      required:
        - teamName
        - description
        - headcount
        - vacancies
        - skills
      properties:
        teamName:
          type: string
          description: チーム名
          example: エンジニアリングチーム
        description:
          type: string
          description: チームの説明
          example: バックエンド開発を担当するチームです
        headcount:
          type: integer
          description: チームの総人数
          minimum: 1
          example: 5
        vacancies:
          type: array
          description: 募集ポジション一覧
          items:
            $ref: '#/components/schemas/Vacancy'
          example: [{"role": "BACKEND", "vacancy": 2}]
        skills:
          type: array
          description: 必要なスキル
          items:
            type: string
          example: ["Go", "Docker", "Kubernetes"]
    ValidationError:
      type: object
      properties:
        field:
          type: string
          description: バリデーションエラーが発生したフィールド
          example: teamName
        message:
          type: string
          description: エラーメッセージ
          example: チーム名は必須です
    TeamResponse:
      type: object
      properties:
        id:
          type: integer
          description: チームID
          example: 1004
        name:
          type: string
          description: チーム名
          example: エンジニアリングチーム
        description:
          type: string
          description: チームの説明
          example: バックエンド開発を担当するチームです
        headcount:
          type: integer
          description: チームの総人数
          example: 5
        members:
          type: array
          description: チームメンバー一覧
          items:
            $ref: '#/components/schemas/Member'
        vacancies:
          type: array
          description: 募集ポジション一覧
          items:
            $ref: '#/components/schemas/Vacancy'
        skills:
          type: array
          description: 必要なスキル一覧
          items:
            $ref: '#/components/schemas/Skill'
    Member:
      type: object
      properties:
        id:
          type: integer
          description: メンバーID
          example: 1
        name:
          type: string
          description: メンバー名
          example: 山田太郎
        email:
          type: string
          description: メールアドレス
          example: yamada@example.com
    Vacancy:
      type: object
      required:
        - role
        - vacancy
      properties:
        role:
          type: string
          description: ポジションの役割
          example: "BACKEND"
        vacancy:
          type: integer
          description: 募集人数
          minimum: 0
          example: 2
    Skill:
      type: object
      properties:
        id:
          type: integer
          description: スキルID
          example: 1
        name:
          type: string
          description: スキル名
          example: Go 