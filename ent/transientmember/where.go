// Code generated by ent, DO NOT EDIT.

package transientmember

import (
	"backend_golang/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLTE(FieldID, id))
}

// TransientMemberID applies equality check predicate on the "transient_member_id" field. It's identical to TransientMemberIDEQ.
func TransientMemberID(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldTransientMemberID, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldEmail, v))
}

// Picture applies equality check predicate on the "picture" field. It's identical to PictureEQ.
func Picture(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldPicture, v))
}

// Nickname applies equality check predicate on the "nickname" field. It's identical to NicknameEQ.
func Nickname(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldNickname, v))
}

// TransientMemberIDEQ applies the EQ predicate on the "transient_member_id" field.
func TransientMemberIDEQ(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldTransientMemberID, v))
}

// TransientMemberIDNEQ applies the NEQ predicate on the "transient_member_id" field.
func TransientMemberIDNEQ(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNEQ(FieldTransientMemberID, v))
}

// TransientMemberIDIn applies the In predicate on the "transient_member_id" field.
func TransientMemberIDIn(vs ...string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldIn(FieldTransientMemberID, vs...))
}

// TransientMemberIDNotIn applies the NotIn predicate on the "transient_member_id" field.
func TransientMemberIDNotIn(vs ...string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNotIn(FieldTransientMemberID, vs...))
}

// TransientMemberIDGT applies the GT predicate on the "transient_member_id" field.
func TransientMemberIDGT(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGT(FieldTransientMemberID, v))
}

// TransientMemberIDGTE applies the GTE predicate on the "transient_member_id" field.
func TransientMemberIDGTE(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGTE(FieldTransientMemberID, v))
}

// TransientMemberIDLT applies the LT predicate on the "transient_member_id" field.
func TransientMemberIDLT(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLT(FieldTransientMemberID, v))
}

// TransientMemberIDLTE applies the LTE predicate on the "transient_member_id" field.
func TransientMemberIDLTE(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLTE(FieldTransientMemberID, v))
}

// TransientMemberIDContains applies the Contains predicate on the "transient_member_id" field.
func TransientMemberIDContains(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldContains(FieldTransientMemberID, v))
}

// TransientMemberIDHasPrefix applies the HasPrefix predicate on the "transient_member_id" field.
func TransientMemberIDHasPrefix(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldHasPrefix(FieldTransientMemberID, v))
}

// TransientMemberIDHasSuffix applies the HasSuffix predicate on the "transient_member_id" field.
func TransientMemberIDHasSuffix(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldHasSuffix(FieldTransientMemberID, v))
}

// TransientMemberIDEqualFold applies the EqualFold predicate on the "transient_member_id" field.
func TransientMemberIDEqualFold(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEqualFold(FieldTransientMemberID, v))
}

// TransientMemberIDContainsFold applies the ContainsFold predicate on the "transient_member_id" field.
func TransientMemberIDContainsFold(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldContainsFold(FieldTransientMemberID, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldContainsFold(FieldEmail, v))
}

// PictureEQ applies the EQ predicate on the "picture" field.
func PictureEQ(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldPicture, v))
}

// PictureNEQ applies the NEQ predicate on the "picture" field.
func PictureNEQ(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNEQ(FieldPicture, v))
}

// PictureIn applies the In predicate on the "picture" field.
func PictureIn(vs ...string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldIn(FieldPicture, vs...))
}

// PictureNotIn applies the NotIn predicate on the "picture" field.
func PictureNotIn(vs ...string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNotIn(FieldPicture, vs...))
}

// PictureGT applies the GT predicate on the "picture" field.
func PictureGT(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGT(FieldPicture, v))
}

// PictureGTE applies the GTE predicate on the "picture" field.
func PictureGTE(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGTE(FieldPicture, v))
}

// PictureLT applies the LT predicate on the "picture" field.
func PictureLT(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLT(FieldPicture, v))
}

// PictureLTE applies the LTE predicate on the "picture" field.
func PictureLTE(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLTE(FieldPicture, v))
}

// PictureContains applies the Contains predicate on the "picture" field.
func PictureContains(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldContains(FieldPicture, v))
}

// PictureHasPrefix applies the HasPrefix predicate on the "picture" field.
func PictureHasPrefix(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldHasPrefix(FieldPicture, v))
}

// PictureHasSuffix applies the HasSuffix predicate on the "picture" field.
func PictureHasSuffix(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldHasSuffix(FieldPicture, v))
}

// PictureEqualFold applies the EqualFold predicate on the "picture" field.
func PictureEqualFold(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEqualFold(FieldPicture, v))
}

// PictureContainsFold applies the ContainsFold predicate on the "picture" field.
func PictureContainsFold(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldContainsFold(FieldPicture, v))
}

// NicknameEQ applies the EQ predicate on the "nickname" field.
func NicknameEQ(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEQ(FieldNickname, v))
}

// NicknameNEQ applies the NEQ predicate on the "nickname" field.
func NicknameNEQ(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNEQ(FieldNickname, v))
}

// NicknameIn applies the In predicate on the "nickname" field.
func NicknameIn(vs ...string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldIn(FieldNickname, vs...))
}

// NicknameNotIn applies the NotIn predicate on the "nickname" field.
func NicknameNotIn(vs ...string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldNotIn(FieldNickname, vs...))
}

// NicknameGT applies the GT predicate on the "nickname" field.
func NicknameGT(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGT(FieldNickname, v))
}

// NicknameGTE applies the GTE predicate on the "nickname" field.
func NicknameGTE(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldGTE(FieldNickname, v))
}

// NicknameLT applies the LT predicate on the "nickname" field.
func NicknameLT(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLT(FieldNickname, v))
}

// NicknameLTE applies the LTE predicate on the "nickname" field.
func NicknameLTE(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldLTE(FieldNickname, v))
}

// NicknameContains applies the Contains predicate on the "nickname" field.
func NicknameContains(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldContains(FieldNickname, v))
}

// NicknameHasPrefix applies the HasPrefix predicate on the "nickname" field.
func NicknameHasPrefix(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldHasPrefix(FieldNickname, v))
}

// NicknameHasSuffix applies the HasSuffix predicate on the "nickname" field.
func NicknameHasSuffix(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldHasSuffix(FieldNickname, v))
}

// NicknameEqualFold applies the EqualFold predicate on the "nickname" field.
func NicknameEqualFold(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldEqualFold(FieldNickname, v))
}

// NicknameContainsFold applies the ContainsFold predicate on the "nickname" field.
func NicknameContainsFold(v string) predicate.TransientMember {
	return predicate.TransientMember(sql.FieldContainsFold(FieldNickname, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TransientMember) predicate.TransientMember {
	return predicate.TransientMember(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TransientMember) predicate.TransientMember {
	return predicate.TransientMember(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TransientMember) predicate.TransientMember {
	return predicate.TransientMember(sql.NotPredicates(p))
}
