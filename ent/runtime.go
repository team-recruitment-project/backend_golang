// Code generated by ent, DO NOT EDIT.

package ent

import (
	"backend_golang/ent/announcement"
	"backend_golang/ent/schema"
	"backend_golang/ent/skill"
	"backend_golang/ent/team"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	announcementFields := schema.Announcement{}.Fields()
	_ = announcementFields
	// announcementDescTitle is the schema descriptor for title field.
	announcementDescTitle := announcementFields[0].Descriptor()
	// announcement.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	announcement.TitleValidator = announcementDescTitle.Validators[0].(func(string) error)
	// announcementDescContent is the schema descriptor for content field.
	announcementDescContent := announcementFields[1].Descriptor()
	// announcement.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	announcement.ContentValidator = announcementDescContent.Validators[0].(func(string) error)
	// announcementDescCreatedAt is the schema descriptor for created_at field.
	announcementDescCreatedAt := announcementFields[2].Descriptor()
	// announcement.DefaultCreatedAt holds the default value on creation for the created_at field.
	announcement.DefaultCreatedAt = announcementDescCreatedAt.Default.(func() time.Time)
	// announcementDescUpdatedAt is the schema descriptor for updated_at field.
	announcementDescUpdatedAt := announcementFields[3].Descriptor()
	// announcement.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	announcement.DefaultUpdatedAt = announcementDescUpdatedAt.Default.(func() time.Time)
	// announcement.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	announcement.UpdateDefaultUpdatedAt = announcementDescUpdatedAt.UpdateDefault.(func() time.Time)
	skillFields := schema.Skill{}.Fields()
	_ = skillFields
	// skillDescName is the schema descriptor for name field.
	skillDescName := skillFields[0].Descriptor()
	// skill.NameValidator is a validator for the "name" field. It is called by the builders before save.
	skill.NameValidator = skillDescName.Validators[0].(func(string) error)
	teamFields := schema.Team{}.Fields()
	_ = teamFields
	// teamDescCreatedBy is the schema descriptor for created_by field.
	teamDescCreatedBy := teamFields[3].Descriptor()
	// team.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	team.CreatedByValidator = teamDescCreatedBy.Validators[0].(func(string) error)
}
